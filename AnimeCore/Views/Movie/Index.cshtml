@inject IGenreRepository GenreRepository
@inject IBannerAdsRepository BannerAdsRepository
@{
    ViewData[Constant.Title] = "Index";
}

@section Slide {
    @await Html.PartialAsync("_SlidePartial")
}

@section TopAds {
    @await Html.PartialAsync("_BannerPartial", BannerAdsRepository.GetActiveBanners("Top", BannerType.Child).PickRandom())
}

@section RightAds {
    @await Html.PartialAsync("_BannerPartial", BannerAdsRepository.GetActiveBanners("Right 1", BannerType.Child).PickRandom())
    @await Html.PartialAsync("_BannerPartial", BannerAdsRepository.GetActiveBanners("Right 2", BannerType.Child).PickRandom())
}

@section BottomAds {
    @await Html.PartialAsync("_BannerPartial", BannerAdsRepository.GetActiveBanners("Bottom", BannerType.Child).PickRandom())
}

@section Balloon {
    @await Html.PartialAsync("_RightBalloonPartial", BannerAdsRepository.GetActiveBanners("Right Balloon", BannerType.Child).PickRandom())
}

<div ng-app="app" ng-controller="movie-controller">
    <div class="panel panel-primary">
        <div class="panel-heading">
            Filter
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-6 col-sm-3">
                    <div class="form-group">
                        <div align="center">Genres:</div>
                        <select class="form-control" data-live-search="true" ng-model="genreId">
                            <option value="">All</option>
                            @foreach (var genre in GenreRepository.ToList())
                            {
                                <option value="@genre.Id">@genre.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-xs-6 col-sm-3">
                    <div class="form-group">
                        <div align="center">Release:</div>
                        <select class="form-control" ng-model="release">
                            <option value="">All</option>
                            @for (var i = DateTime.Now.Year; i >= 2010; i--)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-xs-6 col-sm-3">
                    <div class="form-group">
                        <div align="center">Status:</div>
                        <select class="form-control" ng-model="status">
                            <option value="">All</option>
                            <option value="1">Completed</option>
                            <option value="0">Ongoing</option>
                        </select>
                    </div>

                </div>
                <div class="col-xs-6 col-sm-3">
                    <div class="form-group">
                        <div align="center">Sort by:</div>
                        <select class="form-control" ng-model="propertyName">
                            <option value="name">A-Z</option>
                            <option value="-name">Z-A</option>
                            <option value="-view">View</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-info" id="panel-movie-list">
        <div class="panel-heading">
            Result
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-6 col-sm-4 col-md-3" dir-paginate="movie in movies | orderBy:propertyName:reverse | filter:{ status:status, release:release, genreMovies: {genreId:genreId} } | itemsPerPage:@ViewData[Constant.PageSize]">
                    <a href="@Url.Action("Details")/{{ movie.id }}">
                        <div class="movie-content" title="{{ movie.name }}">
                            <div class="movie-info">
                                <span class="movie-ep pull-left">
                                    <label class="label label-primary">
                                        {{ (movie.episodes).length }}
                                        <span ng-if="movie.status == 0">/ ??</span>
                                        <span ng-if="movie.status == 1">/ {{ (movie.episodes).length }}</span>
                                        Ep
                                    </label>
                                </span>
                                <span class="movie-name col-xs-12">
                                    <label style="margin: 2px">
                                        {{ movie.name }}
                                    </label>
                                </span>
                            </div>
                            <span class="movie-release">
                                <label class="label label-danger">
                                    {{ movie.release | date:"MM/yyyy" }}
                                </label>
                            </span>
                            <span class="movie-view">
                                <label class="label label-success">
                                    <i class="fa fa-eye"></i>
                                    {{ movie.view }}
                                </label>
                            </span>
                            <img class="movie-img img-rounded img-responsive" src="{{ movie.image }}" alt="{{ movie.name }}" asp-append-version="true">
                        </div>
                    </a>
                </div>
            </div>
        </div>
        <div class="panel-footer" align="center">
            <dir-pagination-controls max-size="10" direction-links="true" boundary-links="true"></dir-pagination-controls>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/lib/angular/angular.js"></script>
    <script src="~/lib/angularUtils-pagination/dirPagination.js"></script>

    <script>
        (function() {
            "use strict";
            var app = angular.module("app", ["angularUtils.directives.dirPagination"]);
            app.controller("movie-controller", controller);
            app.filter("status",
                function() {
                    return function(data) {
                        if (data === 1) {
                            return "Completed";
                        }
                        return "Ongoing";
                    };
                });

            controller.$inject = ["$scope", "$http"];

            function controller($scope, $http) {
                $http.get("@Url.Action("GetMovies", "MovieApi", new {searchString = ViewData[Constant.SearchString]})")
                    .then(function(response) {
                        $scope.movies = response.data;
                        $scope.$watch('$viewContentLoaded',
                            function() {
                                $scope.propertyName = "name";
                                $scope.reverse = false;
                                $scope.status = "";
                                $scope.release = "@ViewData["ReleaseYear"]";
                                $scope.genreId = "@Url.ActionContext.RouteData.Values["id"]";
                            });
                    });
                activate();

                function activate() {}
            }
        })();
    </script>
}