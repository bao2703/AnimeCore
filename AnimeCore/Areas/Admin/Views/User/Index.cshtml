@using Models.ModalViewModels
@inject IRoleService RoleService
@model IEnumerable<Models.UserViewModels.UserListViewModel>
@{
    ViewData[Constant.Title] = "User List";
}

@await Html.PartialAsync("Modal/_ModalPartial", new Modal {Id = "user-action-modal", ModalSize = ModalSize.Medium})

<div class="panel panel-info">
    <div class="panel-heading">
        <h4 class="panel-title">
            @ViewData[Constant.Title]
        </h4>
    </div>
    <div class="panel-body">
        <div class="btn-group">
            <a asp-action="Add" class="btn btn-primary @(User.HasClaim("User", "Add") ? "" : "disabled")" data-toggle="modal" data-target="#user-action-modal">
                <i class="fa fa-plus"></i> Add User
            </a>
        </div>
        <div class="top-buffer"></div>
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover" id="dataTables">
                <thead>
                <tr>
                    <th>
                        No
                    </th>
                    <th>
                        <display name-for="@Model.First().UserName"></display>
                    </th>
                    <th>
                        <display name-for="@Model.First().Email"></display>
                    </th>
                    <th>
                        <display name-for="@Model.First().RoleName"></display>
                    </th>
                    <th style="width: 20px;">#</th>
                    <th style="width: 20px;">#</th>
                </tr>
                </thead>
                <tbody>
                @{
                    var i = 1;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@(i++)</td>
                        <td>@item.UserName</td>
                        <td>@item.Email</td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.RoleName))
                            {
                                <a asp-action="Index" asp-controller="Claim" asp-route-roleId="@((await RoleService.FindByNameAsync(item.RoleName)).Id)">
                                    @item.RoleName
                                </a>
                            }
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-info @(User.HasClaim("User", "Edit") ? "" : "disabled")" data-toggle="modal" data-target="#user-action-modal">
                                <i class="fa fa-pencil"></i> Edit
                            </a>
                        </td>
                        <td>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger @(User.HasClaim("User", "Delete") && item.UserName != User.Identity.Name ? "" : "disabled")" data-toggle="modal" data-target="#user-action-modal">
                                <i class="fa fa-trash"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="~/assets/admin/js/modal-remote-setup.js" asp-append-version="true"></script>
    <script src="~/assets/admin/js/modal-form.js" asp-append-version="true"></script>
}